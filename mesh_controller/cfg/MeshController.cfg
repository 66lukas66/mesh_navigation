#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("prop_dis_gain", float_t, 0, "Defines the proportional gain of the PID distance controller", 1.0, 0, 1.0)
gen.add("int_dis_gain", float_t, 0, "Defines the integral gain of the PID distance controller", 1.0, 0, 1.0)
gen.add("deriv_dis_gain", float_t, 0, "Defines the derivative gain of the PID distance controller", 1.0, 0, 1.0)
gen.add("prop_dir_gain", float_t, 0, "Defines the proportional gain of the PID direction controller", 1.0, 0, 1.0)
gen.add("int_dir_gain", float_t, 0, "Defines the integral gain of the PID direction controller", 1.0, 0, 1.0)
gen.add("deriv_dir_gain", float_t, 0, "Defines the derivative gain of the PID direction controller", 1.0, 0, 1.0)
gen.add("useMeshGradient", bool_t, 0, "Defines whether the navigation follows the planned path (use default) or mesh vector field (set true)", False)
gen.add("max_lin_velocity", float_t, 0, "Defines the maximum linear velocity", 1.0, 0.1, 5.0)
gen.add("max_ang_velocity", float_t, 0, "Defines the maximum angular velocity", 1.0, 0.1, 5.0)
gen.add("fading", float_t, 0, "Defines for how long in the beginning/end the linear velocity will be increased/decreased (in percent)", 5.0, 0.0, 50.0)
gen.add("int_time", float_t, 0, "Defines the interval time by which the PID controller is called - here 0.1 sec", 0.1, 0.1, 0.1)
gen.add("control_type", Control_t, 0, "Defines which controller is used. Can be 'naive' or 'pid'.", naive)

exit(gen.generate("mesh_controller", "mesh_controller", "MeshController"))