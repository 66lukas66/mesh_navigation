#!/usr/bin/env python

from dynamic_reconfigure.parameter_generator_catkin import *

gen = ParameterGenerator()

gen.add("min_contour_size", int_t, 0, "Defines the minimum size for a contour to be classified as 'lethal'.", 3, 0,
        100000)
gen.add("layer_factor", double_t, 0, "Defines the factor for combining edge distances and vertex costs.", 1.0, 0, 10.0)
gen.add("cost_limit", double_t, 0, "Defines the vertex cost limit with which it can be accessed.", 1.0, 0, 10.0)

gen.add("subscribe_node",str_t,0,"Node from the mesh_map subscribet","/ouster/destaggeredpoints")
gen.add("step", int_t,0,"Defines the step for the OFM Generator",1,1,100)

gen.add("edgeThreshold", double_t,0,"Defines the edgeThreshold for the OFM Generator",0.35,0.01,10)
gen.add("softcap", double_t,0,"Defines the Distance to stop in front of a lethal vertex",0.5,0.1,10)
gen.add("threshouldSpeed", double_t,0,"Defines the Threshold for the speed caluclation",5,1,10)
gen.add("minDinstanceSpeed", double_t,0,"Defines the minimum Distance for the speed caluclation to filter the noise of the lidar",0.1,0.1,10)

gen.add("right_wheel", double_t,0,"y_value of the right_wheel",0.5,0.01,10.0)
gen.add("left_wheel", double_t,0,"y_value of the left_wheel",0.5,0.01,10.0)
gen.add("delta", double_t,0,"area of interesse",0.3,0.1,10.0)
gen.add("min_x", double_t,0,"min distance of a vertex of the mesh",0.8,0.8,10.0)
gen.add("max_z", double_t,0,"max hight of a point in the mesh",0.1,0.1,10.0)
gen.add("max_sensor_range", double_t,0,"max range of the sensor",15.0,0.1,100.0)
gen.add("roboter_hight", double_t,0,"hight of thr roboter plus min distance to objects",1.4,0.01,10.0)
gen.add("roboter_wheelbase", double_t,0,"wheelbase of the roboter plus min distance to objects",1.0,0.01,10.0)
gen.add("roboter_ground_clearance", double_t,0,"ground clearance of thr roboter plus min distance to objects",0.8,0.01,10.0)



exit(gen.generate("mesh_map", "mesh_map", "MeshMap"))
